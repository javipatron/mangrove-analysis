---
title: "Silvestrum Assignment"
author: "Javier Patrón"
date: "`r Sys.Date()`"
output:
  tufte::tufte_html: default
  tufte::tufte_handout:
    citation_package: natbib
    latex_engine: xelatex
  tufte::tufte_book:
    citation_package: natbib
    latex_engine: xelatex
editor: 
  markdown: 
    wrap: 72
---

#Load the libraries

```{r}
library(tidyverse)
library(here)
library(janitor)
library(knitr)
library(pwr)
library(skimr)
library(tidymodels)
library(kableExtra)
```

Reading the .csv files

```{r}
#Load the shared Mangrove Data from Silvestrum
mangrove_df_a <- read_csv("/Users/javipatron/Documents/MEDS/Personal/projects/mangrove-analysis/data/clean_monitoring_data_javier.csv") |> clean_names() #Clean names will make the column names as lower case

mangrove_df_b <- read_csv("/Users/javipatron/Documents/MEDS/Personal/projects/mangrove-analysis/data/siteb.csv") |> clean_names() |> na.omit()#homogenizing the column names and adding NA to values

```

## Site A

# Cleaning and changing the type of class of some columns

```{r}
#Changing some data
mangrove_df_a$plantation_year <- as.character(mangrove_df_a$plantation_year) # Making the years as character instead of numbers
mangrove_df_a$plot <- as.character(mangrove_df_a$plot) # Making the plot names as character
mangrove_df_a$plot_size_m2 <- as.factor(mangrove_df_a$plot_size_m2) # Making the plot sizes as factor instead of numeric

```

## Joining both dataframes with plot sizes of 154m2 - ONLY

```{r}
#Cleaning and getting the site A ready for the stacking
tidy_a <- mangrove_df_a |> 
  filter(plot_size_m2 == 153.938) |> 
  select(plantation_year, plot, height_cm, cd_chatting_m, total_tree_kg_c, total_tree_mg_c_ha) |> 
  mutate(site = "A",
         cd_chatting_m = cd_chatting_m * 100)|> 
  relocate(site, .before = plantation_year) |> 
  rename(year = plantation_year,
         plot_name = plot,
         crown_diameter_cm = cd_chatting_m,
         total_tree_c_kg = total_tree_kg_c,
         "total_tree_c_Mg_ha" = total_tree_mg_c_ha)

```

## Site B
```{r}
# Cleaning and getting the site B for the stacking with site A
tidy_b <- mangrove_df_b |> 
  select(year, plot, height_cm, crown_dia_m, total_c_kg, total_c_t_ha) |> 
  mutate(site = "B",
         crown_dia_m = crown_dia_m *100) |> 
  rename(plot_name = plot,
         total_tree_c_kg = total_c_kg,
         "total_tree_c_Mg_ha" = total_c_t_ha,
         crown_diameter_cm = crown_dia_m ) |> 
    relocate(site, .before = year)

```

### Bind both Data Frames
```{r}
# Creating a row binding to have the same columns but all the information
full_df <- rbind(tidy_a, tidy_b)
```

![](tree_diagram.jpg){width="50%"}

Assuming that the crown diamater(Crown Dia (cm)) of site B is the same
as the CD Chatting (cm) of site A we will merge them to have more
variables in our correlation model.

```{r, echo=F}
mangrove_recipe <- full_df |> 
  recipe(total_tree_c_Mg_ha ~ .) |> 
  step_integer(site, year, plot_name, zero_based = TRUE) |> 
  prep() |> 
  bake(new_data = NULL)

```

Create a correlation Matrix to see the importance of the variables. Find
the correlation of the variables within full_df

```{r}
head(full_df)
skim(full_df)
```


```{r, echo = F}

# Load the corrplot package
library(corrplot)

# Obtain correlation matrix
tree_matrix <- cor(mangrove_recipe)

# Make a correlation plot between the variables
corrplot(tree_matrix, 
         method = "shade", 
         shade.col = NA, 
         tl.col = "black", 
         tl.srt = 45, 
         addCoef.col = "black", 
         cl.pos = "n", 
         order = "original")

```

As we can in the matrix the height of the tree is relevant `height_cm`
with 0.46 of correlation but the `crown/diameter` column is even
greater.

# Personal Analysis with power calculation
#### A first analysis for number of trees per plot

Creating a summary table for amount of tree´s per plot
```{r, echo = F}
full_plots <- full_df |> 
  group_by(site, year, plot_name) |> 
  summarise(tree_count = n(),
            density = tree_count/154,
            mean_height_cm = mean(height_cm),
            sd_height = sd(height_cm),
            mean_diameter_cm = mean(crown_diameter_cm),
            sd_diameter = sd(crown_diameter_cm),
            mean_biomass = mean(total_tree_c_kg),
            sd_biomass = sd(total_tree_c_kg),
            mean_carbon_Mg_ha = mean(total_tree_c_Mg_ha),
            sd_carbon_Mg_ha = sd(total_tree_c_Mg_ha),
            std_error = sd_carbon_Mg_ha/sqrt(tree_count)) |> 
  relocate(plot_name, .after = year)

head(full_plots)

```

```{r}

ggplot(full_plots, aes(x = tree_count, y = sd_carbon_Mg_ha)) +
  geom_jitter(aes(color = site)) +
  labs(title = "Carbon Divergence in relation to Tree samples",
       x = "Number of trees per plot",
       y = "Std. Dev of carbon per plot")

```

As we can tell from the graph above; increasing the number of trees
reduces significantly the divergence of the carbon calculations (SD), but there should be a threshold on what is a good estimate amount of trees to be calculated.

Creating a new vector for the Power Calculation of number of trees
```{r}
new_vector <- c()
for(i in 1:nrow(full_plots)) { 
  sd = full_plots$sd_carbon_Mg_ha[[i]]
  mean = full_plots$mean_carbon_Mg_ha[[i]]
  d1 = as.numeric(sqrt(sd^2/2))
  effect_size = mean / d1
  power_test <- pwr.t.test(d = round(effect_size,2), 
                           power = 0.90, 
                           sig.level = 0.05,
                           type="two.sample",
                           alternative="two.sided")
  new <- round(power_test$n,1)            
  new_vector <- c(new_vector, new)
}

```

Adding the vector to the data frame
```{r, echo = F}

full_plots <- cbind(full_plots, data.frame(power = new_vector)) |> 
  relocate(power, .after = tree_count)

```


```{r, echo = F}

full_plots <- full_plots |> 
  mutate(difference = ((tree_count - power)/ tree_count) *100) |> 
  relocate(difference, .after = power) |> 
  mutate(difference = round(difference,1))

```

```{r}
full_plots %>%
  head(10) |> 
  kable() |> 
  column_spec(5, background = "yellow") |> 
  column_spec(6, background = "lightgreen")
```

As you can see in the table above the number of trees with a power of .90 is highlighted in green

```{r}

ggplot(full_plots, aes(x = sd_diameter, y = difference, color = site)) +
  geom_point() +
  labs(title = "Graph Analysis 1",
       x = "Std Dev of Diameter (cm)",
       y = "Power decrease (%)") +
  scale_y_continuous(breaks = seq(-700, 100, by = 100))

```

```{r}

ggplot(full_plots, aes(x = mean_diameter_cm, y = sd_carbon_Mg_ha, color = site )) +
  geom_point() +
  labs(title = "Graph Analysis 2")

```

## Conclusions for amount of trees:

1.  As you can see in `graph analysis #1` most
    of the power calculations where telling us to decrease the number
    of trees being sampled in a reasonable and impactful way except for the outliers, which have a strange behavior and data in the samples:
    -   2019 Sample Plot \# 01

    -   2018 Sample Plot \# 02

    -   2015 Sample Plot \# 06

2. Also in and `graph analysis #2` we can see the important relationship between canopy diameter and the SD of Carbon calculated. The bigger the trees the more more disturbance/ variation we have in our calculations.

## Analysis for number of plots

```{r}
# Creating a summary table for number of plots
summary_full_df <- full_df |> 
  group_by(site, year) |> 
  summarise(plot_count = length(unique(plot_name)),
            tree_count = n(),
            density = (tree_count/plot_count),
            mean_height_cm = mean(height_cm),
            sd_height_cm = sd(height_cm),
            mean_diameter_cm = mean(crown_diameter_cm),
            sd_diameter_cm = sd(crown_diameter_cm),
            mean_biomass = mean(total_tree_c_kg),
            sd_biomass = sd(total_tree_c_kg),
            mean_tot_carbon_Mg_ha = mean(total_tree_c_Mg_ha),
            sd_tot_carbon_Mg_ha = sd(total_tree_c_Mg_ha),
            std_error = sd_tot_carbon_Mg_ha/sqrt(plot_count))
```

### Creating a new vector for the Power Calculation

```{r}
new_vector2 <- c()

for(i in 1:nrow(summary_full_df)) { 
  sd = summary_full_df$sd_tot_carbon_Mg_ha[[i]]
  mean = summary_full_df$mean_tot_carbon_Mg_ha[[i]]
  d1 = as.numeric(sqrt(sd^2/2))
  effect_size = mean / d1
  power_test <- pwr.t.test(d = effect_size, 
                           power = 0.90, 
                           sig.level = 0.05,
                           type="two.sample",
                           alternative="two.sided")
  new <- round(power_test$n,1)            
  new_vector2 <- c(new_vector2, new)}


```

Adding the vector to the data frame
```{r}

summary_full_df <- cbind(summary_full_df, data.frame(power = new_vector2))
summary_full_df <- summary_full_df |> 
  relocate(power, .after = plot_count)

```

Power Calculation Testing
```{r}
# sd = summary_full_df[[10,7]]
# mean = summary_full_df[[10,6]]
# d1 = as.numeric(sqrt(sd^2/2))
# effect_size = mean / d1
# power_test <- pwr.t.test(d = effect_size, 
#                          power = 0.90, 
#                          sig.level = 0.05,
#                          type="two.sample",
#                          alternative="two.sided")
# 
# print(power_test)
# 
# round(power_test$n,1)
# ceiling(power_test$n)             

```

#### Adding the A/R Methodological Tool

$n =\frac{N \text{ }* \text{ }tvalue^2 \text{ }* \text{ }(\epsilon\ w * s)^2)}{N \text{ }*\text{ } E^2 + \text{ }tvalue^2 \text{ }* \text{ }\epsilon\ w * s^2}$

*n* = Number of sample plots required for estimation of biomass stocks
within the project boundary; dimensionless.

*N* = Total number of possible sample plots within the project boundary
space or the population; dimensionless.

*t-value* = Two-sided Student´s t-value, at infinite degrees of freedom,
for the required confidence level; dimensionless. (Table-> 90% =
1.645)

*w* = Relative weight of the area of stratum i (i.e. the area of the
stratum i divided by the project).

*s =* Estimated standard deviation of biomass stock in stratum

*E* = Acceptable margin of error (i.e. one-half the confidence interval) in estimation of biomass stock within the project boundary.

```{r}
# create a logical condition that is TRUE for rows where the year is 2010
# use the condition inside the square brackets to subset the data frame and select the "density" column

tvalue = 1.645
ar_tool <- c()

conf_interval <- t.test(summary_full_df$sd_biomass, conf.level = 0.95)
lower <- conf_interval$conf.int[1]
upper <- conf_interval$conf.int[2]
E <- (upper - lower) / 2

for (i in seq(1,10)){
  year_condition <- summary_full_df$year[i]
  w <- 154/(summary_full_df$plot_count[i]*154)
  s <- full_plots$sd_biomass[which(full_plots$year == year_condition)]
  N <- summary_full_df$plot_count[i]
  n <- round((N * tvalue^2 * sum(w * s)^2) / (N * E^2 + (tvalue^2 * sum(w * s^2))),1)
  ar_tool <- c(ar_tool, n)
}

summary_full_df$ar_tool <- ar_tool

```

Adding the new vector to the data frame

```{r}
summary_full_df <- summary_full_df |> 
  relocate(ar_tool, .after = power)
```

```{r}

summary_full_df %>%
  head(10) |> 
  kable() |> 
  column_spec(3, background = "lightblue") |> 
  column_spec(4, background = "lightyellow") |> 
  column_spec(5, background = "lightgreen")

```

```{r}

summary_full_df |> 
  mutate(year = paste(year, "site:",site)) |> 
  ggplot(aes(x = year)) +
  geom_point(aes(y = power, color = "power")) +
  geom_point(aes(y = plot_count, color = "real")) +
  geom_point(aes(y = ar_tool, color = "A/R Tool")) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(title = "Estimated number of plots per project",
       subtitle = "Graph 4",
       x = "Plantation Year",
       y = "Number of Plots",
       color = "Method")

```

In the graph above you can see the different plantation years/ projects and the number of plots using each method. The `real` is from the initial data, the `power` is from the power calculation shown in the code above, and the `A/R Tool` with the formula created by the for loop. 

```{r}

ggplot(summary_full_df, aes(x = mean_diameter_cm, y = plot_count, color = year)) +
  geom_point() +
  labs(title = "Graph Analysis 3") +
  geom_smooth(method = lm,
              se = F)

```


## Conclusions for the calculations of amount of plots:

1. There are a lot of moving pieces around. In graph 4, we can see that there is a significant change in the total number of plots depending on each methods being used. Some plantation years that have similar results from the 3 methods like for the replantation year 2016  on Site B. Also, in graph 4 we can see that there is an interesting pattern between the real number of trees and the A/R Tool predicted number.

2. In the graph 3 as expected

3. As you can see in `graph analysis #1` most
    of the power calculations where telling us to decrease the number
    of trees being sampled in a reasonable and impactful way except for the outliers, which have a strange behavior and data in the samples:
    -   2019 Sample Plot \# 01

    -   2018 Sample Plot \# 02

    -   2015 Sample Plot \# 06

2. Also in and `graph analysis #2` we can see the important relationship between canopy diameter and the SD of Carbon calculated. The bigger the trees the more more disturbance/ variation we have in our calculations.







